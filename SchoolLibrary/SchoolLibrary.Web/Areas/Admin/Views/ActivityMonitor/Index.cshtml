@{
    ViewData["Title"] = "Gi√°m s√°t Ho·∫°t ƒë·ªông";
    var statistics = (dynamic)ViewBag.Statistics;
    var recentBorrows = (List<SchoolLibrary.Web.Models.BorrowRecord>)ViewBag.RecentBorrows;
    var overdueBooks = (List<SchoolLibrary.Web.Models.BorrowRecord>)ViewBag.OverdueBooks;
}

<div class="content-box">
    <h2 class="mb-4">üìä Gi√°m s√°t Ho·∫°t ƒë·ªông H·ªá th·ªëng</h2>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-2 col-sm-6 mb-3">
            <div class="card border-primary">
                <div class="card-body text-center">
                    <h5 class="text-primary">H√¥m nay</h5>
                    <h2 class="text-primary">@statistics.TotalBorrowsToday</h2>
                    <small class="text-muted">M∆∞·ª£n s√°ch</small>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-sm-6 mb-3">
            <div class="card border-info">
                <div class="card-body text-center">
                    <h5 class="text-info">Tr·∫£ h√¥m nay</h5>
                    <h2 class="text-info">@statistics.ReturnedToday</h2>
                    <small class="text-muted">Tr·∫£ s√°ch</small>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-sm-6 mb-3">
            <div class="card border-warning">
                <div class="card-body text-center">
                    <h5 class="text-warning">Tu·∫ßn n√†y</h5>
                    <h2 class="text-warning">@statistics.TotalBorrowsThisWeek</h2>
                    <small class="text-muted">L∆∞·ª£t m∆∞·ª£n</small>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-sm-6 mb-3">
            <div class="card border-success">
                <div class="card-body text-center">
                    <h5 class="text-success">Th√°ng n√†y</h5>
                    <h2 class="text-success">@statistics.TotalBorrowsThisMonth</h2>
                    <small class="text-muted">L∆∞·ª£t m∆∞·ª£n</small>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-sm-6 mb-3">
            <div class="card border-danger">
                <div class="card-body text-center">
                    <h5 class="text-danger">Qu√° h·∫°n</h5>
                    <h2 class="text-danger">@statistics.OverdueCount</h2>
                    <small class="text-muted">S√°ch qu√° h·∫°n</small>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-sm-6 mb-3">
            <div class="card border-secondary">
                <div class="card-body text-center">
                    <h5 class="text-secondary">H√¥m nay</h5>
                    <h2 class="text-secondary">@DateTime.Now.ToString("dd/MM/yyyy")</h2>
                    <small class="text-muted">Ng√†y hi·ªán t·∫°i</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Overdue Books Alert -->
    @if (overdueBooks.Any())
    {
        <div class="alert alert-danger">
            <h5>‚ö†Ô∏è C·∫£nh b√°o: C√≥ @overdueBooks.Count s√°ch qu√° h·∫°n ch∆∞a tr·∫£!</h5>
            <a asp-action="OverdueBooks" class="btn btn-sm btn-danger">Xem chi ti·∫øt</a>
        </div>
    }

    <!-- Recent Activity -->
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5>üìã Ho·∫°t ƒë·ªông M∆∞·ª£n S√°ch G·∫ßn ƒê√¢y</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Ng√†y m∆∞·ª£n</th>
                                    <th>Ng∆∞·ªùi m∆∞·ª£n</th>
                                    <th>T√™n s√°ch</th>
                                    <th>H·∫°n tr·∫£</th>
                                    <th>Tr·∫°ng th√°i</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var record in recentBorrows.Take(20))
                                {
                                    var isOverdue = !record.IsReturned && record.DueDate < DateTime.Now.Date;
                                    <tr class="@(isOverdue ? "table-danger" : "")">
                                        <td>@record.BorrowDate.ToString("dd/MM/yyyy")</td>
                                        <td>@record.User?.FullName</td>
                                        <td>@record.BookCopy?.Book?.Title</td>
                                        <td>
                                            @record.DueDate.ToString("dd/MM/yyyy")
                                            @if (isOverdue)
                                            {
                                                <span class="badge bg-danger">Qu√° h·∫°n</span>
                                            }
                                        </td>
                                        <td>
                                            @if (record.IsReturned && record.ReturnDate.HasValue)
                                            {
                                                <span class="badge bg-success">ƒê√£ tr·∫£</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning">ƒêang m∆∞·ª£n</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

